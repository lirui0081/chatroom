import socketio = require('socket.io');
import http = require('http');


//在线用户
var onlineUsers = {};
//当前在线人数
var onlineCount = 0;


function chatroomio(server: http.Server) {
    var io: SocketIO.Server = socketio(server);

    io.on("connection", function (client: cr.socketClient) {
        console.log("socket.io on connection!一个用户进入");

        // client.on('event', function (data) {
        //     console.log("socket.io on event", arguments);
        // });
        // client.on('disconnect', function () {
        //     console.log("socket.io on disconnect", arguments);
        // });

        //监听新用户加入
        client.on('login', function (obj) {
            //将新加入用户的唯一标识当作socket的名称，后面退出的时候会用到
            client.name = obj.userid;

            //检查在线列表，如果不在里面就加入
            if (!onlineUsers.hasOwnProperty(obj.userid)) {
                onlineUsers[obj.userid] = obj.username;
                //在线人数+1
                onlineCount++;
            }

            //向所有客户端广播用户加入
            io.emit('login', { onlineUsers: onlineUsers, onlineCount: onlineCount, user: obj });
            console.log(obj.username + '加入了聊天室');
        });

        //监听用户退出
        client.on('disconnect', function () {
            //将退出的用户从在线列表中删除
            if (onlineUsers.hasOwnProperty(client.name)) {
                //退出用户的信息
                var obj = { userid: client.name, username: onlineUsers[client.name] };

                //删除
                delete onlineUsers[client.name];
                //在线人数-1
                onlineCount--;

                //向所有客户端广播用户退出
                io.emit('logout', { onlineUsers: onlineUsers, onlineCount: onlineCount, user: obj });
                console.log(obj.username + '退出了聊天室');
            }
        });

        //监听用户发布聊天内容
        client.on('message', function (obj) {
            //向所有客户端广播发布的消息
            io.emit('message', obj);
            console.log(obj.username + '说：' + obj.content);
        });
    });
}

//---------
export = chatroomio;